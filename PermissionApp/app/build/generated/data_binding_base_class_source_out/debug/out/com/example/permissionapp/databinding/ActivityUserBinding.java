// Generated by view binder compiler. Do not edit!
package com.example.permissionapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.permissionapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final CheckBox checkCondition;

  @NonNull
  public final CheckBox checkPolity;

  @NonNull
  public final EditText datePicker;

  @NonNull
  public final EditText edtEmail;

  @NonNull
  public final EditText edtLastname;

  @NonNull
  public final EditText edtName;

  @NonNull
  public final EditText edtNumberId;

  @NonNull
  public final EditText edtPassword;

  @NonNull
  public final EditText edtPassword2;

  @NonNull
  public final FragmentContainerView fragmentContainer;

  @NonNull
  public final CardView register;

  @NonNull
  public final Spinner spinTypeId;

  @NonNull
  public final TextView textView4;

  private ActivityUserBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnNext,
      @NonNull CheckBox checkCondition, @NonNull CheckBox checkPolity, @NonNull EditText datePicker,
      @NonNull EditText edtEmail, @NonNull EditText edtLastname, @NonNull EditText edtName,
      @NonNull EditText edtNumberId, @NonNull EditText edtPassword, @NonNull EditText edtPassword2,
      @NonNull FragmentContainerView fragmentContainer, @NonNull CardView register,
      @NonNull Spinner spinTypeId, @NonNull TextView textView4) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.checkCondition = checkCondition;
    this.checkPolity = checkPolity;
    this.datePicker = datePicker;
    this.edtEmail = edtEmail;
    this.edtLastname = edtLastname;
    this.edtName = edtName;
    this.edtNumberId = edtNumberId;
    this.edtPassword = edtPassword;
    this.edtPassword2 = edtPassword2;
    this.fragmentContainer = fragmentContainer;
    this.register = register;
    this.spinTypeId = spinTypeId;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_next;
      Button btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.check_condition;
      CheckBox checkCondition = ViewBindings.findChildViewById(rootView, id);
      if (checkCondition == null) {
        break missingId;
      }

      id = R.id.check_polity;
      CheckBox checkPolity = ViewBindings.findChildViewById(rootView, id);
      if (checkPolity == null) {
        break missingId;
      }

      id = R.id.date_picker;
      EditText datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.edt_email;
      EditText edtEmail = ViewBindings.findChildViewById(rootView, id);
      if (edtEmail == null) {
        break missingId;
      }

      id = R.id.edt_lastname;
      EditText edtLastname = ViewBindings.findChildViewById(rootView, id);
      if (edtLastname == null) {
        break missingId;
      }

      id = R.id.edt_name;
      EditText edtName = ViewBindings.findChildViewById(rootView, id);
      if (edtName == null) {
        break missingId;
      }

      id = R.id.edt_numberId;
      EditText edtNumberId = ViewBindings.findChildViewById(rootView, id);
      if (edtNumberId == null) {
        break missingId;
      }

      id = R.id.edt_password;
      EditText edtPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtPassword == null) {
        break missingId;
      }

      id = R.id.edt_password2;
      EditText edtPassword2 = ViewBindings.findChildViewById(rootView, id);
      if (edtPassword2 == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FragmentContainerView fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.register;
      CardView register = ViewBindings.findChildViewById(rootView, id);
      if (register == null) {
        break missingId;
      }

      id = R.id.spin_typeId;
      Spinner spinTypeId = ViewBindings.findChildViewById(rootView, id);
      if (spinTypeId == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivityUserBinding((ConstraintLayout) rootView, btnNext, checkCondition,
          checkPolity, datePicker, edtEmail, edtLastname, edtName, edtNumberId, edtPassword,
          edtPassword2, fragmentContainer, register, spinTypeId, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
