// Generated by view binder compiler. Do not edit!
package com.example.permissionapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.permissionapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentScannerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnFinish;

  @NonNull
  public final TextView btnScanner;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout scan;

  @NonNull
  public final TextView tvScan;

  private FragmentScannerBinding(@NonNull FrameLayout rootView, @NonNull Button btnFinish,
      @NonNull TextView btnScanner, @NonNull ImageView imageView, @NonNull LinearLayout scan,
      @NonNull TextView tvScan) {
    this.rootView = rootView;
    this.btnFinish = btnFinish;
    this.btnScanner = btnScanner;
    this.imageView = imageView;
    this.scan = scan;
    this.tvScan = tvScan;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentScannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentScannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_scanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentScannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_finish;
      Button btnFinish = ViewBindings.findChildViewById(rootView, id);
      if (btnFinish == null) {
        break missingId;
      }

      id = R.id.btn_scanner;
      TextView btnScanner = ViewBindings.findChildViewById(rootView, id);
      if (btnScanner == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.scan;
      LinearLayout scan = ViewBindings.findChildViewById(rootView, id);
      if (scan == null) {
        break missingId;
      }

      id = R.id.tv_scan;
      TextView tvScan = ViewBindings.findChildViewById(rootView, id);
      if (tvScan == null) {
        break missingId;
      }

      return new FragmentScannerBinding((FrameLayout) rootView, btnFinish, btnScanner, imageView,
          scan, tvScan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
